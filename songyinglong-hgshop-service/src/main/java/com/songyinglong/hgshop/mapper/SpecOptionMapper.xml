<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.songyinglong.hgshop.mapper.SpecOptionMapper">
  <resultMap id="BaseResultMap" type="com.songyinglong.hgshop.entity.SpecOption">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="option_name" jdbcType="VARCHAR" property="optionName" />
    <result column="spec_id" jdbcType="INTEGER" property="specId" />
    <result column="orders" jdbcType="INTEGER" property="orders" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, option_name, spec_id, orders
  </sql>
  <select id="selectByExample" parameterType="com.songyinglong.hgshop.entity.SpecOptionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from hg_spec_option
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from hg_spec_option
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from hg_spec_option
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.songyinglong.hgshop.entity.SpecOptionExample">
    delete from hg_spec_option
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.songyinglong.hgshop.entity.SpecOption">
    insert into hg_spec_option (id, option_name, spec_id, 
      orders)
    values (#{id,jdbcType=INTEGER}, #{optionName,jdbcType=VARCHAR}, #{specId,jdbcType=INTEGER}, 
      #{orders,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.songyinglong.hgshop.entity.SpecOption">
    insert into hg_spec_option
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="optionName != null">
        option_name,
      </if>
      <if test="specId != null">
        spec_id,
      </if>
      <if test="orders != null">
        orders,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="optionName != null">
        #{optionName,jdbcType=VARCHAR},
      </if>
      <if test="specId != null">
        #{specId,jdbcType=INTEGER},
      </if>
      <if test="orders != null">
        #{orders,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.songyinglong.hgshop.entity.SpecOptionExample" resultType="java.lang.Long">
    select count(*) from hg_spec_option
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update hg_spec_option
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.optionName != null">
        option_name = #{record.optionName,jdbcType=VARCHAR},
      </if>
      <if test="record.specId != null">
        spec_id = #{record.specId,jdbcType=INTEGER},
      </if>
      <if test="record.orders != null">
        orders = #{record.orders,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update hg_spec_option
    set id = #{record.id,jdbcType=INTEGER},
      option_name = #{record.optionName,jdbcType=VARCHAR},
      spec_id = #{record.specId,jdbcType=INTEGER},
      orders = #{record.orders,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.songyinglong.hgshop.entity.SpecOption">
    update hg_spec_option
    <set>
      <if test="optionName != null">
        option_name = #{optionName,jdbcType=VARCHAR},
      </if>
      <if test="specId != null">
        spec_id = #{specId,jdbcType=INTEGER},
      </if>
      <if test="orders != null">
        orders = #{orders,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.songyinglong.hgshop.entity.SpecOption">
    update hg_spec_option
    set option_name = #{optionName,jdbcType=VARCHAR},
      spec_id = #{specId,jdbcType=INTEGER},
      orders = #{orders,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectBySpecId" resultType="SpecOption">
    select
    <include refid="Base_Column_List" />
    from hg_spec_option WHERE spec_id=#{specId}
  </select>
    <select id="selectBySkuId" resultType="com.songyinglong.hgshop.entity.SpecOption">
      select  b.id,b.option_name FROM hg_sku_spec a LEFT JOIN hg_spec_option b on a.spec_option_id=b.id WHERE a.sku_id=#{skuId} and a.spec_id=#{specId} and a.spec_id=b.spec_id
    </select>
</mapper>