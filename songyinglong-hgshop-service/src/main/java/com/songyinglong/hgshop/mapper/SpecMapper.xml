<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.songyinglong.hgshop.mapper.SpecMapper">
  <resultMap id="BaseResultMap" type="com.songyinglong.hgshop.entity.Spec">
      <id column="id" property="id"/>
    <result column="spec_name" jdbcType="VARCHAR" property="specName" />
      <result column="category_id" property="categoryId"/>
    <collection property="specOptions" ofType="SpecOption" select="com.songyinglong.hgshop.mapper.SpecOptionMapper.selectBySpecId" column="id"></collection>
  </resultMap>
    <resultMap id="selectResultMap" type="com.songyinglong.hgshop.entity.Spec">
        <id column="id" property="id"/>
        <result column="spec_name" jdbcType="VARCHAR" property="specName" />
        <collection property="specOptions" ofType="SpecOption" select="com.songyinglong.hgshop.mapper.SpecOptionMapper.selectBySpecId" column="id"></collection>
    </resultMap>
    <resultMap id="selectByIdResultMap" type="com.songyinglong.hgshop.entity.Spec">
        <id column="id" property="id"/>
        <result column="spec_name" jdbcType="VARCHAR" property="specName" />
        <collection property="specOptions" ofType="SpecOption" select="com.songyinglong.hgshop.mapper.SpecOptionMapper.selectBySpecId" column="id"></collection>
    </resultMap>
  <resultMap id="BaseResultMap2" type="com.songyinglong.hgshop.entity.Spec">
    <id column="id" property="id"/>
    <result column="spec_name" jdbcType="VARCHAR" property="specName" />
    <collection property="specOptions" ofType="SpecOption">
      <id column="spec_option_id" property="id"></id>
      <result column="spec_option_name" property="optionName"></result>
    </collection>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, spec_name
  </sql>
  <select id="selectByExample" parameterType="com.songyinglong.hgshop.entity.SpecExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from hg_spec
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="selectByIdResultMap">
      SELECT distinct id,spec_name specName  from hg_spec
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectSpecListByCategoryId" resultMap="selectResultMap">
      SELECT distinct a.id,a.spec_name,GROUP_CONCAT(c.name) categoryNames from hg_spec a LEFT JOIN hg_category_spec b on a.id=b.spec_id LEFT join hg_category c on b.category_id=c.id
    <where>
      <if test="categoryId != null">
        and  b.category_id=#{categoryId}
      </if>
      <if test="specName!=null and specName!=''">
        and spec_name like  concat('%',#{specName},'%')
      </if>
    </where>
      group by a.id
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from hg_spec
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.songyinglong.hgshop.entity.SpecExample">
    delete from hg_spec
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <delete id="deleteCategorySpecBySpecId">
    DELETE  from hg_category_spec where spec_id=#{id}
  </delete>
  <insert id="insert" parameterType="com.songyinglong.hgshop.entity.Spec" useGeneratedKeys="true" keyProperty="id">
    insert into hg_spec (id, spec_name)
    values (#{id,jdbcType=INTEGER}, #{specName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.songyinglong.hgshop.entity.Spec">
    insert into hg_spec
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="specName != null">
        spec_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="specName != null">
        #{specName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

    <select id="countByExample" parameterType="com.songyinglong.hgshop.entity.SpecExample" resultType="java.lang.Long">
    select count(*) from hg_spec
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="selectSpecs" resultType="com.songyinglong.hgshop.entity.Spec">
    SELECT id,spec_name FROM hg_spec
  </select>
  <select id="selectSpecsBySkuId" resultMap="BaseResultMap2">
    SELECT b.id,b.spec_name,c.id spec_option_id,c.option_name spec_option_name from hg_sku_spec a LEFT JOIN hg_spec b on a.spec_id=b.id LEFT JOIN hg_spec_option c on a.spec_option_id=c.id WHERE a.sku_id=#{skuId}
  </select>

  <update id="updateByExampleSelective" parameterType="map">
    update hg_spec
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.specName != null">
        spec_name = #{record.specName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update hg_spec
    set id = #{record.id,jdbcType=INTEGER},
      spec_name = #{record.specName,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.songyinglong.hgshop.entity.Spec">
    update hg_spec
    <set>
      <if test="specName != null">
        spec_name = #{specName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.songyinglong.hgshop.entity.Spec">
    update hg_spec
    set spec_name = #{specName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectSpecBySpuIds" resultMap="BaseResultMap2">
    select distinct s.id,s.spec_name,so.id spec_option_id,so.option_name spec_option_name
    from hg_sku k join hg_sku_spec ks on k.id=ks.sku_id
    join hg_spec s on ks.spec_id=s.id
    join hg_spec_option so on ks.spec_option_id=so.id
    where k.spu_id in
    <foreach collection="list" open="(" close=")" separator="," item="id">
      #{id}
    </foreach>
  </select>
</mapper>